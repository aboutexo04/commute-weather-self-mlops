version: '3.8'

services:
  # 기존 서비스들 (mlops-app, redis, mlflow-server, data-collector)
  mlops-app:
    build: .
    container_name: commute-weather-mlops
    ports:
      - "8000:8000"
    environment:
      - PYTHONPATH=/app/src
    volumes:
      - ./.env:/app/.env:ro
      - ./logs:/app/logs
      - ./mlflow:/app/mlflow
      - ./data:/app/data
    depends_on:
      - redis
    networks:
      - mlops-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: mlops-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - mlops-network
    restart: unless-stopped

  mlflow-server:
    build: .
    container_name: mlops-mlflow
    ports:
      - "5001:5000"
    environment:
      - PYTHONPATH=/app/src
    volumes:
      - ./.env:/app/.env:ro
      - ./mlflow:/app/mlflow
    command: ["mlflow", "server", "--host", "0.0.0.0", "--port", "5000", "--backend-store-uri", "file:///app/mlflow"]
    networks:
      - mlops-network
    restart: unless-stopped

  data-collector:
    build: .
    container_name: mlops-collector
    environment:
      - PYTHONPATH=/app/src
    volumes:
      - ./.env:/app/.env:ro
      - ./logs:/app/logs
      - ./data:/app/data
    command: ["python", "scripts/run_realtime_mlops.py"]
    depends_on:
      - redis
      - mlops-app
    networks:
      - mlops-network
    restart: unless-stopped

  # 새로운 모델 훈련 스케줄러
  training-scheduler:
    build: .
    container_name: mlops-training-scheduler
    environment:
      - PYTHONPATH=/app/src
      - MLFLOW_TRACKING_URI=http://mlflow-server:5000
    volumes:
      - ./.env:/app/.env:ro
      - ./logs:/app/logs
      - ./mlflow:/app/mlflow
      - ./data:/app/data
    command: ["python", "scripts/run_training_scheduler.py", "--daily-time", "02:00", "--weekly-day", "sunday", "--weekly-time", "03:00"]
    depends_on:
      - mlflow-server
      - redis
      - data-collector
    networks:
      - mlops-network
    restart: unless-stopped
    # 헬스체크 추가
    healthcheck:
      test: ["CMD", "python", "-c", "import sys; sys.exit(0)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 모델 성능 모니터링 서비스
  performance-monitor:
    build: .
    container_name: mlops-performance-monitor
    environment:
      - PYTHONPATH=/app/src
      - MLFLOW_TRACKING_URI=http://mlflow-server:5000
    volumes:
      - ./.env:/app/.env:ro
      - ./logs:/app/logs
      - ./mlflow:/app/mlflow
    command: ["python", "scripts/run_performance_monitor.py"]
    depends_on:
      - mlflow-server
      - training-scheduler
    networks:
      - mlops-network
    restart: unless-stopped

networks:
  mlops-network:
    driver: bridge

volumes:
  redis-data: